{"abi":[{"type":"function","name":"createChainSpecificProxyWithNonce","inputs":[{"name":"_singleton","type":"address","internalType":"address"},{"name":"initializer","type":"bytes","internalType":"bytes"},{"name":"saltNonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"proxy","type":"address","internalType":"contract SafeProxy"}],"stateMutability":"nonpayable"},{"type":"function","name":"createProxyWithCallback","inputs":[{"name":"_singleton","type":"address","internalType":"address"},{"name":"initializer","type":"bytes","internalType":"bytes"},{"name":"saltNonce","type":"uint256","internalType":"uint256"},{"name":"callback","type":"address","internalType":"contract IProxyCreationCallback"}],"outputs":[{"name":"proxy","type":"address","internalType":"contract SafeProxy"}],"stateMutability":"nonpayable"},{"type":"function","name":"createProxyWithNonce","inputs":[{"name":"_singleton","type":"address","internalType":"address"},{"name":"initializer","type":"bytes","internalType":"bytes"},{"name":"saltNonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"proxy","type":"address","internalType":"contract SafeProxy"}],"stateMutability":"nonpayable"},{"type":"function","name":"getChainId","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"proxyCreationCode","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"event","name":"ProxyCreation","inputs":[{"name":"proxy","type":"address","indexed":true,"internalType":"contract SafeProxy"},{"name":"singleton","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x6080604052348015600e575f5ffd5b5061092e8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610064575f3560e01c806353e5d9351161004d57806353e5d935146100b3578063d18af54d146100c8578063ec9e80bb146100db575f5ffd5b80631688f0b9146100685780633408e470146100a5575b5f5ffd5b61007b6100763660046105d8565b6100ee565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b60405146815260200161009c565b6100bb61018f565b60405161009c919061067a565b61007b6100d6366004610693565b6101d7565b61007b6100e93660046105d8565b6102ec565b5f5f838051906020012083604051602001610113929190918252602082015260400190565b60405160208183030381529060405280519060200120905061013685858361031d565b60405173ffffffffffffffffffffffffffffffffffffffff8781168252919350908316907f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2359060200160405180910390a2509392505050565b6060604051806020016101a1906104b2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604052919050565b5f5f838360405160200161021a92919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b604051602081830303815290604052805190602001205f1c905061023f8686836100ee565b915073ffffffffffffffffffffffffffffffffffffffff8316156102e3576040517f1e52b51800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690631e52b518906102b59085908a908a908a906004016106fb565b5f604051808303815f87803b1580156102cc575f5ffd5b505af11580156102de573d5f5f3e3d5ffd5b505050505b50949350505050565b5f5f8380519060200120836102fe4690565b6040805160208101949094528301919091526060820152608001610113565b5f833b61038b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f7965640060448201526064015b60405180910390fd5b5f6040518060200161039c906104b2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526103f4919073ffffffffffffffffffffffffffffffffffffffff881690602001610756565b6040516020818303038152906040529050828151826020015ff5915073ffffffffffffffffffffffffffffffffffffffff821661048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f437265617465322063616c6c206661696c6564000000000000000000000000006044820152606401610382565b8351156104aa575f5f5f8651602088015f875af1036104aa575f5ffd5b509392505050565b6101888061077183390190565b73ffffffffffffffffffffffffffffffffffffffff811681146104e0575f5ffd5b50565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f82601f83011261051f575f5ffd5b813567ffffffffffffffff811115610539576105396104e3565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff821117156105a5576105a56104e3565b6040528181528382016020018510156105bc575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f606084860312156105ea575f5ffd5b83356105f5816104bf565b9250602084013567ffffffffffffffff811115610610575f5ffd5b61061c86828701610510565b93969395505050506040919091013590565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f61068c602083018461062e565b9392505050565b5f5f5f5f608085870312156106a6575f5ffd5b84356106b1816104bf565b9350602085013567ffffffffffffffff8111156106cc575f5ffd5b6106d887828801610510565b9350506040850135915060608501356106f0816104bf565b939692955090935050565b73ffffffffffffffffffffffffffffffffffffffff8516815273ffffffffffffffffffffffffffffffffffffffff84166020820152608060408201525f610745608083018561062e565b905082606083015295945050505050565b5f83518060208601845e919091019182525060200191905056fe6080604052348015600e575f5ffd5b50604051610188380380610188833981016040819052602b9160b2565b6001600160a01b038116608f5760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b5f80546001600160a01b0319166001600160a01b039290921691909117905560dd565b5f6020828403121560c1575f5ffd5b81516001600160a01b038116811460d6575f5ffd5b9392505050565b609f806100e95f395ff3fe608060405273ffffffffffffffffffffffffffffffffffffffff5f54167fa619486e000000000000000000000000000000000000000000000000000000005f3503604b57805f5260205ff35b365f5f375f5f365f845af490503d5f5f3e806064573d5ffd5b503d5ff3fea264697066735822122067994ab7fc0d8624aa09594118e269f5886dd2f2dfcd24a41ffd645574fa49ff64736f6c634300081d0033a264697066735822122040c9a071ffce4dd8564ff6e0174b727fdde9bc4f118d2a1c46b6e27928dec51964736f6c634300081d0033","sourceMap":"3787:6639:302:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f5ffd5b5060043610610064575f3560e01c806353e5d9351161004d57806353e5d935146100b3578063d18af54d146100c8578063ec9e80bb146100db575f5ffd5b80631688f0b9146100685780633408e470146100a5575b5f5ffd5b61007b6100763660046105d8565b6100ee565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b60405146815260200161009c565b6100bb61018f565b60405161009c919061067a565b61007b6100d6366004610693565b6101d7565b61007b6100e93660046105d8565b6102ec565b5f5f838051906020012083604051602001610113929190918252602082015260400190565b60405160208183030381529060405280519060200120905061013685858361031d565b60405173ffffffffffffffffffffffffffffffffffffffff8781168252919350908316907f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2359060200160405180910390a2509392505050565b6060604051806020016101a1906104b2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604052919050565b5f5f838360405160200161021a92919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b604051602081830303815290604052805190602001205f1c905061023f8686836100ee565b915073ffffffffffffffffffffffffffffffffffffffff8316156102e3576040517f1e52b51800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690631e52b518906102b59085908a908a908a906004016106fb565b5f604051808303815f87803b1580156102cc575f5ffd5b505af11580156102de573d5f5f3e3d5ffd5b505050505b50949350505050565b5f5f8380519060200120836102fe4690565b6040805160208101949094528301919091526060820152608001610113565b5f833b61038b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f7965640060448201526064015b60405180910390fd5b5f6040518060200161039c906104b2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526103f4919073ffffffffffffffffffffffffffffffffffffffff881690602001610756565b6040516020818303038152906040529050828151826020015ff5915073ffffffffffffffffffffffffffffffffffffffff821661048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f437265617465322063616c6c206661696c6564000000000000000000000000006044820152606401610382565b8351156104aa575f5f5f8651602088015f875af1036104aa575f5ffd5b509392505050565b6101888061077183390190565b73ffffffffffffffffffffffffffffffffffffffff811681146104e0575f5ffd5b50565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f82601f83011261051f575f5ffd5b813567ffffffffffffffff811115610539576105396104e3565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff821117156105a5576105a56104e3565b6040528181528382016020018510156105bc575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f606084860312156105ea575f5ffd5b83356105f5816104bf565b9250602084013567ffffffffffffffff811115610610575f5ffd5b61061c86828701610510565b93969395505050506040919091013590565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f61068c602083018461062e565b9392505050565b5f5f5f5f608085870312156106a6575f5ffd5b84356106b1816104bf565b9350602085013567ffffffffffffffff8111156106cc575f5ffd5b6106d887828801610510565b9350506040850135915060608501356106f0816104bf565b939692955090935050565b73ffffffffffffffffffffffffffffffffffffffff8516815273ffffffffffffffffffffffffffffffffffffffff84166020820152608060408201525f610745608083018561062e565b905082606083015295945050505050565b5f83518060208601845e919091019182525060200191905056fe6080604052348015600e575f5ffd5b50604051610188380380610188833981016040819052602b9160b2565b6001600160a01b038116608f5760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b5f80546001600160a01b0319166001600160a01b039290921691909117905560dd565b5f6020828403121560c1575f5ffd5b81516001600160a01b038116811460d6575f5ffd5b9392505050565b609f806100e95f395ff3fe608060405273ffffffffffffffffffffffffffffffffffffffff5f54167fa619486e000000000000000000000000000000000000000000000000000000005f3503604b57805f5260205ff35b365f5f375f5f365f845af490503d5f5f3e806064573d5ffd5b503d5ff3fea264697066735822122067994ab7fc0d8624aa09594118e269f5886dd2f2dfcd24a41ffd645574fa49ff64736f6c634300081d0033a264697066735822122040c9a071ffce4dd8564ff6e0174b727fdde9bc4f118d2a1c46b6e27928dec51964736f6c634300081d0033","sourceMap":"3787:6639:302:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6374:523;;;;;;:::i;:::-;;:::i;:::-;;;1993:42:379;1981:55;;;1963:74;;1951:2;1936:18;6374:523:302;;;;;;;;10213:211;;;10380:9;2194:25:379;;2182:2;2167:18;10213:211:302;2048:177:379;4034:116:302;;;:::i;:::-;;;;;;;:::i;8869:585::-;;;;;;:::i;:::-;;:::i;7653:550::-;;;;;;:::i;:::-;;:::i;6374:523::-;6515:15;6684:12;6749:11;6739:22;;;;;;6763:9;6722:51;;;;;;;;3715:19:379;;;3759:2;3750:12;;3743:28;3796:2;3787:12;;3558:247;6722:51:302;;;;;;;;;;;;;6699:84;;;;;;6684:99;;6801:42;6813:10;6825:11;6838:4;6801:11;:42::i;:::-;6858:32;;;1981:55:379;;;1963:74;;6793:50:302;;-1:-1:-1;6858:32:302;;;;;;1951:2:379;1936:18;6858:32:302;;;;;;;6532:365;6374:523;;;;;:::o;4034:116::-;4084:12;4115:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4034:116;-1:-1:-1;4034:116:302:o;8869:585::-;9054:15;9081:29;9161:9;9172:8;9144:37;;;;;;;;4230:19:379;;;4287:2;4283:15;4300:66;4279:88;4274:2;4265:12;;4258:110;4393:2;4384:12;;4041:361;9144:37:302;;;;;;;;;;;;;9134:48;;;;;;9113:79;;9081:111;;9210:114;9244:10;9268:11;9293:21;9210:20;:114::i;:::-;9202:122;-1:-1:-1;9338:31:302;;;;9334:113;;9383:64;;;;;:21;;;;;;:64;;9405:5;;9412:10;;9424:11;;9437:9;;9383:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9334:113;9071:383;8869:585;;;;;;:::o;7653:550::-;7807:15;7976:12;8041:11;8031:22;;;;;;8055:9;8066:12;10380:9;;10213:211;8066:12;8014:65;;;;;;5154:19:379;;;;5189:12;;5182:28;;;;5226:12;;;5219:28;5263:12;;8014:65:302;4969:312:379;4654:1248:302;4783:15;9991:20;;4810:66;;;;;;;5488:2:379;4810:66:302;;;5470:21:379;5527:2;5507:18;;;5500:30;5566:33;5546:18;;;5539:61;5617:18;;4810:66:302;;;;;;;;;4887:27;4947:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4917:110;;4947:28;4989;;;;4947;4917:110;;:::i;:::-;;;;;;;;;;;;;4887:140;;5253:4;5220:14;5214:21;5181:14;5175:4;5171:25;5150:3;5125:146;5116:155;-1:-1:-1;5298:28:302;;;5290:60;;;;;;;6198:2:379;5290:60:302;;;6180:21:379;6237:2;6217:18;;;6210:30;6276:21;6256:18;;;6249:49;6315:18;;5290:60:302;5996:343:379;5290:60:302;5365:18;;:22;5361:535;;5800:1;5755;5728;5690:11;5684:18;5653:4;5640:11;5636:22;5609:1;5578:5;5547;5517:261;5493:326;5490:382;;5852:1;5849;5842:12;5490:382;4800:1102;4654:1248;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:154:379:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:184::-;225:77;222:1;215:88;322:4;319:1;312:15;346:4;343:1;336:15;362:843;404:5;457:3;450:4;442:6;438:17;434:27;424:55;;475:1;472;465:12;424:55;515:6;502:20;545:18;537:6;534:30;531:56;;;567:18;;:::i;:::-;616:2;610:9;763:66;758:2;689:66;682:4;674:6;670:17;666:90;662:99;658:172;650:6;646:185;897:6;885:10;882:22;861:18;849:10;846:34;843:62;840:88;;;908:18;;:::i;:::-;944:2;937:22;968;;;1009:19;;;1030:4;1005:30;1002:39;-1:-1:-1;999:59:379;;;1054:1;1051;1044:12;999:59;1118:6;1111:4;1103:6;1099:17;1092:4;1084:6;1080:17;1067:58;1173:1;1145:19;;;1166:4;1141:30;1134:41;;;;1149:6;362:843;-1:-1:-1;;;362:843:379:o;1210:575::-;1296:6;1304;1312;1365:2;1353:9;1344:7;1340:23;1336:32;1333:52;;;1381:1;1378;1371:12;1333:52;1420:9;1407:23;1439:31;1464:5;1439:31;:::i;:::-;1489:5;-1:-1:-1;1545:2:379;1530:18;;1517:32;1572:18;1561:30;;1558:50;;;1604:1;1601;1594:12;1558:50;1627:49;1668:7;1659:6;1648:9;1644:22;1627:49;:::i;:::-;1210:575;;1617:59;;-1:-1:-1;;;;1749:2:379;1734:18;;;;1721:32;;1210:575::o;2230:347::-;2271:3;2309:5;2303:12;2336:6;2331:3;2324:19;2392:6;2385:4;2378:5;2374:16;2367:4;2362:3;2358:14;2352:47;2444:1;2437:4;2428:6;2423:3;2419:16;2415:27;2408:38;2566:4;2496:66;2491:2;2483:6;2479:15;2475:88;2470:3;2466:98;2462:109;2455:116;;;2230:347;;;;:::o;2582:217::-;2729:2;2718:9;2711:21;2692:4;2749:44;2789:2;2778:9;2774:18;2766:6;2749:44;:::i;:::-;2741:52;2582:217;-1:-1:-1;;;2582:217:379:o;2804:749::-;2931:6;2939;2947;2955;3008:3;2996:9;2987:7;2983:23;2979:33;2976:53;;;3025:1;3022;3015:12;2976:53;3064:9;3051:23;3083:31;3108:5;3083:31;:::i;:::-;3133:5;-1:-1:-1;3189:2:379;3174:18;;3161:32;3216:18;3205:30;;3202:50;;;3248:1;3245;3238:12;3202:50;3271:49;3312:7;3303:6;3292:9;3288:22;3271:49;:::i;:::-;3261:59;-1:-1:-1;;3393:2:379;3378:18;;3365:32;;-1:-1:-1;3475:2:379;3460:18;;3447:32;3488:33;3447:32;3488:33;:::i;:::-;2804:749;;;;-1:-1:-1;2804:749:379;;-1:-1:-1;;2804:749:379:o;4407:557::-;4677:42;4669:6;4665:55;4654:9;4647:74;4769:42;4761:6;4757:55;4752:2;4741:9;4737:18;4730:83;4849:3;4844:2;4833:9;4829:18;4822:31;4628:4;4870:45;4910:3;4899:9;4895:19;4887:6;4870:45;:::i;:::-;4862:53;;4951:6;4946:2;4935:9;4931:18;4924:34;4407:557;;;;;;;:::o;5646:345::-;5803:3;5841:6;5835:13;5887:6;5880:4;5872:6;5868:17;5863:3;5857:37;5913:16;;;;5938:18;;;-1:-1:-1;5980:4:379;5972:13;;5646:345;-1:-1:-1;5646:345:379:o","linkReferences":{}},"methodIdentifiers":{"createChainSpecificProxyWithNonce(address,bytes,uint256)":"ec9e80bb","createProxyWithCallback(address,bytes,uint256,address)":"d18af54d","createProxyWithNonce(address,bytes,uint256)":"1688f0b9","getChainId()":"3408e470","proxyCreationCode()":"53e5d935"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract SafeProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"}],\"name\":\"ProxyCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"}],\"name\":\"createChainSpecificProxyWithNonce\",\"outputs\":[{\"internalType\":\"contract SafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"},{\"internalType\":\"contract IProxyCreationCallback\",\"name\":\"callback\",\"type\":\"address\"}],\"name\":\"createProxyWithCallback\",\"outputs\":[{\"internalType\":\"contract SafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"}],\"name\":\"createProxyWithNonce\",\"outputs\":[{\"internalType\":\"contract SafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stefan George - @Georgi87\",\"kind\":\"dev\",\"methods\":{\"createChainSpecificProxyWithNonce(address,bytes,uint256)\":{\"details\":\"Allows to create a new proxy contract that should exist only on 1 network (e.g. specific governance or admin accounts)      by including the chain id in the create2 salt. Such proxies cannot be created on other networks by replaying the transaction.\",\"params\":{\"_singleton\":\"Address of singleton contract. Must be deployed at the time of execution.\",\"initializer\":\"Payload for a message call to be sent to a new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"createProxyWithCallback(address,bytes,uint256,address)\":{\"params\":{\"_singleton\":\"Address of singleton contract. Must be deployed at the time of execution.\",\"callback\":\"Callback that will be invoked after the new proxy contract has been successfully deployed and initialized.\",\"initializer\":\"Payload for a message call to be sent to a new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"createProxyWithNonce(address,bytes,uint256)\":{\"params\":{\"_singleton\":\"Address of singleton contract. Must be deployed at the time of execution.\",\"initializer\":\"Payload for a message call to be sent to a new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"getChainId()\":{\"returns\":{\"_0\":\"The ID of the current chain as a uint256.\"}},\"proxyCreationCode()\":{\"details\":\"Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address.\"}},\"title\":\"Proxy Factory - Allows to create a new proxy contract and execute a message call to the new proxy within one transaction.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createChainSpecificProxyWithNonce(address,bytes,uint256)\":{\"notice\":\"Deploys a new chain-specific proxy with `_singleton` singleton and `saltNonce` salt. Optionally executes an initializer call to a new proxy.\"},\"createProxyWithCallback(address,bytes,uint256,address)\":{\"notice\":\"Deploy a new proxy with `_singleton` singleton and `saltNonce` salt.         Optionally executes an initializer call to a new proxy and calls a specified callback address `callback`.\"},\"createProxyWithNonce(address,bytes,uint256)\":{\"notice\":\"Deploys a new proxy with `_singleton` singleton and `saltNonce` salt. Optionally executes an initializer call to a new proxy.\"},\"getChainId()\":{\"notice\":\"Returns the ID of the chain the contract is currently deployed on.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/safe/SafeProxyFactory_flattened.sol\":\"SafeProxyFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@eth-optimism/=node_modules/@hop-protocol/sdk/node_modules/@eth-optimism/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":Permit2/=lib/Permit2/\",\":celer-network/=lib/sgn-v2-contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-gas-snapshot/=lib/Permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":lifi/=src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/Permit2/src/\",\":sgn-v2-contracts/=lib/sgn-v2-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\",\":test/=test/\"]},\"sources\":{\"src/safe/SafeProxyFactory_flattened.sol\":{\"keccak256\":\"0xe7556b4e66c06ba34cc2f08327b710bdef959b2524f33b61c96e27b1a21f47c1\",\"urls\":[\"bzz-raw://b891528b60d01de217430f97572081ad24a54ab95e85287283a30adcfd383978\",\"dweb:/ipfs/Qmas1DSXrwDaneBqyAwtrazJLr97tAwSKcbdPGVdb9YekM\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.29+commit.ab55807c"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract SafeProxy","name":"proxy","type":"address","indexed":true},{"internalType":"address","name":"singleton","type":"address","indexed":false}],"type":"event","name":"ProxyCreation","anonymous":false},{"inputs":[{"internalType":"address","name":"_singleton","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"uint256","name":"saltNonce","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createChainSpecificProxyWithNonce","outputs":[{"internalType":"contract SafeProxy","name":"proxy","type":"address"}]},{"inputs":[{"internalType":"address","name":"_singleton","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"uint256","name":"saltNonce","type":"uint256"},{"internalType":"contract IProxyCreationCallback","name":"callback","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"createProxyWithCallback","outputs":[{"internalType":"contract SafeProxy","name":"proxy","type":"address"}]},{"inputs":[{"internalType":"address","name":"_singleton","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"uint256","name":"saltNonce","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createProxyWithNonce","outputs":[{"internalType":"contract SafeProxy","name":"proxy","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"proxyCreationCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{"createChainSpecificProxyWithNonce(address,bytes,uint256)":{"details":"Allows to create a new proxy contract that should exist only on 1 network (e.g. specific governance or admin accounts)      by including the chain id in the create2 salt. Such proxies cannot be created on other networks by replaying the transaction.","params":{"_singleton":"Address of singleton contract. Must be deployed at the time of execution.","initializer":"Payload for a message call to be sent to a new proxy contract.","saltNonce":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract."}},"createProxyWithCallback(address,bytes,uint256,address)":{"params":{"_singleton":"Address of singleton contract. Must be deployed at the time of execution.","callback":"Callback that will be invoked after the new proxy contract has been successfully deployed and initialized.","initializer":"Payload for a message call to be sent to a new proxy contract.","saltNonce":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract."}},"createProxyWithNonce(address,bytes,uint256)":{"params":{"_singleton":"Address of singleton contract. Must be deployed at the time of execution.","initializer":"Payload for a message call to be sent to a new proxy contract.","saltNonce":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract."}},"getChainId()":{"returns":{"_0":"The ID of the current chain as a uint256."}},"proxyCreationCode()":{"details":"Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address."}},"version":1},"userdoc":{"kind":"user","methods":{"createChainSpecificProxyWithNonce(address,bytes,uint256)":{"notice":"Deploys a new chain-specific proxy with `_singleton` singleton and `saltNonce` salt. Optionally executes an initializer call to a new proxy."},"createProxyWithCallback(address,bytes,uint256,address)":{"notice":"Deploy a new proxy with `_singleton` singleton and `saltNonce` salt.         Optionally executes an initializer call to a new proxy and calls a specified callback address `callback`."},"createProxyWithNonce(address,bytes,uint256)":{"notice":"Deploys a new proxy with `_singleton` singleton and `saltNonce` salt. Optionally executes an initializer call to a new proxy."},"getChainId()":{"notice":"Returns the ID of the chain the contract is currently deployed on."}},"version":1}},"settings":{"remappings":["@eth-optimism/=node_modules/@hop-protocol/sdk/node_modules/@eth-optimism/","@openzeppelin/=lib/openzeppelin-contracts/","@uniswap/=node_modules/@uniswap/","Permit2/=lib/Permit2/","celer-network/=lib/sgn-v2-contracts/","create3-factory/=lib/create3-factory/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-gas-snapshot/=lib/Permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","lifi/=src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","permit2/=lib/Permit2/src/","sgn-v2-contracts/=lib/sgn-v2-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/","test/=test/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/safe/SafeProxyFactory_flattened.sol":"SafeProxyFactory"},"evmVersion":"cancun","libraries":{}},"sources":{"src/safe/SafeProxyFactory_flattened.sol":{"keccak256":"0xe7556b4e66c06ba34cc2f08327b710bdef959b2524f33b61c96e27b1a21f47c1","urls":["bzz-raw://b891528b60d01de217430f97572081ad24a54ab95e85287283a30adcfd383978","dweb:/ipfs/Qmas1DSXrwDaneBqyAwtrazJLr97tAwSKcbdPGVdb9YekM"],"license":null}},"version":1},"id":302}