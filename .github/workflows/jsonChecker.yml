name: JSON Checker
# - checks selected JSON files for semantic issues and fails if any issues are found
# - validates the following locations/files:
#   - config/*.json
#   - deployments/*.json
#   - audit/auditLog.json
#   - script/deploy/_targetState.json
#   - script/deploy/resources/deployRequirements.json

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  validate-json:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 20

      # Step 3: Install jsonlint
      - name: Install jsonlint
        run: npm install -g jsonlint

      # Step 4: Find and validate JSON files
      - name: Validate JSON files
        run: |

          set -e

          # Function to validate JSON files
          validate_json() {
            local path="$1"
            # check if path exists
            if [ -e "$path" ]; then
            echo "Checking $path"
            # check if path is a directory
              if [ -d "$path" ]; then
                find "$path" -type f -name "*.json" -exec sh -c '
                  # go through all files in directory
                  for file do
                    echo "Validating $file"
                    if [ "$(stat -f%z "$file")" -gt 5242880 ]; then
                      echo "Warning: $file is larger than 5MB"
                    fi

                    # check json file
                    npx jsonlint "$file"
                  done
                ' sh {} +
              else
                # just check single file
                npx jsonlint "$path"
              fi
            else
              echo "Warning: $path does not exist"
            fi
          }
          validate_json "config"
          validate_json "deployments"
          validate_json "audit/auditLog.json"
          validate_json "script/deploy/_targetState.json"
