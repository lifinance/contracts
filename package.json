{
  "name": "lifi-contracts",
  "version": "0.1.0",
  "description": "LI.FI is a cross-chain bridge aggregation protocol",
  "engines": {
    "node": ">= 12.18.0"
  },
  "type": "module",
  "repository": "github:lifinance/contracts",
  "author": "LI.FI",
  "license": "MIT",
  "keywords": [
    "ethereum",
    "smart-contracts",
    "template",
    "cross-chain",
    "solidity"
  ],
  "devDependencies": {
    "@mayanfinance/swap-sdk": "^8.5.0",
    "@solana/web3.js": "^1.95.4",
    "@typechain/ethers-v5": "^10.2.0",
    "@types/node": "^17.0.23",
    "@types/pino": "^7.0.5",
    "@typescript-eslint/eslint-plugin": "^5.16.0",
    "@typescript-eslint/parser": "^7.10.0",
    "cross-env": "^7.0.2",
    "dotenv": "^16.0.0",
    "eslint": "^8.11.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.27.5",
    "ethers": "^5.7.0",
    "ethers6": "npm:ethers@^6.12.1",
    "fs-extra": "^10.0.1",
    "husky": "^8.0.1",
    "lint-staged": "^13.2.3",
    "node-gyp": "^10.2.0",
    "patch-package": "^6.4.7",
    "plop": "^3.1.2",
    "postinstall-postinstall": "^2.1.0",
    "prettier": "^2.6.0",
    "prettier-plugin-solidity": "^1.0.0-beta.19",
    "solhint": "^5.0.5",
    "solhint-plugin-prettier": "^0.0.5",
    "solidity-coverage": "^0.8.14",
    "ts-generator": "^0.1.1",
    "typechain": "^8.0.0",
    "typescript": "^5.4.5",
    "zksync-web3": "^0.14.3"
  },
  "overrides": {
    "web3": "4.16.0"
  },
  "scripts": {
    "preinstall": "bash preinstall.sh",
    "postinstall": "patch-package",
    "prepare": "bun prepare:husky",
    "prepare:husky": "husky install",
    "lint": "eslint \"**/*.{js,ts}\" && solhint src/**/*.sol",
    "lint:fix": "eslint --fix \"**/*.{js,ts}\" && solhint --fix src/**/*.sol",
    "format": "prettier --check \"**/*.{ts,js,sol}\"",
    "format:fix": "prettier --write \"**/*.{ts,js,sol}\"",
    "compile": "forge build",
    "test": "forge test --evm-version 'cancun'",
    "test:fix": "npm run lint:fix; npm run format:fix; npm run test",
    "gas": "forge snapshot --match-path 'test/solidity/Gas/**/*' -vvv",
    "coverage": "rm -rf coverage && rm -f lcov-filtered.info && rm -f lcov.info && forge coverage --report lcov --evm-version 'cancun' --ir-minimum && bun script/utils/filter_lcov.ts lcov.info lcov-filtered.info 'test/' 'script/' && genhtml lcov-filtered.info --branch-coverage --output-dir coverage && open coverage/index.html",
    "execute": "node ./_scripts.js run",
    "abi:generate": "forge clean && rm -fr typechain/* && forge build --skip script --skip test --skip Base --skip Test && bun tasks/generateDiamondABI.ts",
    "abi:removeDuplicateEvents": "bun script/removeDuplicateEventsFromABI.ts",
    "typechain": "forge clean && rm -rf typechain/* && forge build src && bun abi:removeDuplicateEvents && typechain --target ethers-v5 'out/*.sol/*.json' --out-dir typechain",
    "codegen": "plop",
    "healthcheck": "bun ./script/deploy/healthCheck.ts",
    "propose-safe-tx": "bun ./script/deploy/safe/propose-to-safe.ts",
    "confirm-safe-tx": "bun ./script/deploy/safe/confirm-safe-tx.ts",
    "add-safe-owners-and-threshold": "bun ./script/deploy/safe/add-safe-owners-and-threshold.ts",
    "unpause-all-diamonds": "bun ./script/tasks/unpauseAllDiamonds.ts",
    "deploy-safe": "bun ./script/deploy/safe/deploy-safe.ts",
    "flatten": "forge flatten --output",
    "remove-from-diamond": "bun script/tasks/cleanUpProdDiamond.ts"
  },
  "dependencies": {
    "@arbitrum/sdk": "^3.0.0",
    "@hop-protocol/sdk": "0.0.1-beta.310",
    "@layerzerolabs/lz-v2-utilities": "^2.3.21",
    "@octokit/rest": "^21.0.1",
    "@safe-global/safe-deployments": "^1.37.32",
    "@uma/sdk": "^0.22.1",
    "@uniswap/permit2-sdk": "^1.3.0",
    "@uniswap/sdk": "^3.0.3",
    "chalk": "4.1.2",
    "citty": "^0.1.6",
    "consola": "^3.2.3",
    "defender-relay-client": "^1.26.0",
    "enquirer": "^2.4.1",
    "light-spinner": "^1.0.4",
    "merkletreejs": "^0.3.11",
    "mongodb": "^6.13.0",
    "notify-send": "^0.1.2",
    "pino": "^7.9.2",
    "viem": "^2.22.16",
    "zx": "^8.2.2"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.sol": [
      "prettier --write",
      "bash -c 'if [ \"$#\" -gt 0 ]; then output=$(bunx solhint --noPrompt --fix \"$@\" 2>&1); ret=$?; if echo \"$output\" | grep -q \"No files to lint!\"; then exit 0; else echo \"$output\"; exit $ret; fi; else exit 0; fi # If no lintable files, exit silently to avoid commit errors' _"
    ]
  }
}
